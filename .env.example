# Environment Variables Configuration for Render Deployment

## Required Environment Variables

### Database
- `DATABASE_URL` - PostgreSQL connection string (automatically provided by Render)
- `NODE_ENV` - Set to "production" for production deployment

### Session & Security
- `SESSION_SECRET` - Secret key for session encryption (auto-generated by Render)
- `PORT` - Port number for the server (set to 10000 by default on Render)

### External API Keys (Set these in Render Dashboard)
- `CLOUDINARY_CLOUD_NAME` - Cloudinary cloud name for image uploads
- `CLOUDINARY_API_KEY` - Cloudinary API key
- `CLOUDINARY_API_SECRET` - Cloudinary API secret
- `TOGETHER_API_KEY` - Together AI API key for AI quiz generation
- `GEMINI_API_KEY` - Google Gemini API key for AI features
- `SENDGRID_API_KEY` - SendGrid API key for email functionality
- `GOOGLE_VISION_API_KEY` - Google Vision API key for OCR features

## Setting Environment Variables in Render

1. Go to your service dashboard in Render
2. Click on "Environment" tab
3. Add each variable with its corresponding value
4. Click "Save Changes"

## Development vs Production

### Development (.env file)
```
NODE_ENV=development
DATABASE_URL=your_local_postgres_url
SESSION_SECRET=your_local_session_secret
CLOUDINARY_CLOUD_NAME=your_cloudinary_name
CLOUDINARY_API_KEY=your_cloudinary_key
CLOUDINARY_API_SECRET=your_cloudinary_secret
TOGETHER_API_KEY=your_together_api_key
GEMINI_API_KEY=your_gemini_key
SENDGRID_API_KEY=your_sendgrid_key
GOOGLE_VISION_API_KEY=your_google_vision_key
```

### Production (Render Environment Variables)
All the same variables but managed through Render's dashboard for security.

## Notes
- DATABASE_URL is automatically provided by Render when you create a PostgreSQL database
- SESSION_SECRET can be auto-generated by Render for security
- Never commit API keys to your repository
- Use the Render dashboard to manage sensitive environment variables
